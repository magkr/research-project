import networkx as nx

# Expected output for 3=-10, 4=30, 5=15, 6=20, 9=20, 11=5 14=10, 19=-10, 20=-5, 24=30, 25=-20, 26=30
# Supplier:			30 		{15, 16, 18, 22, 24}
# Manufacturer:		30		{0, 1, 3, 6, 7, 8, 9}


def adv_supply_chain():
    g = nx.DiGraph()
    g.add_node(-1,  weight=0,    player=None,            name="Start")
    g.add_node(-2,  weight=0,    player=None,            name="End")

    g.add_node(0,   weight=0,    player="Manufacturer",  name="Make order")
    g.add_node(1,   weight=0,    player="Manufacturer",  name="Receive lateness notification") 
    g.add_node(2,   weight=0,    player="Manufacturer",  name="Receive notification") 
    g.add_node(3,   weight=5,    player="Manufacturer",  name="Accept lateness") 
    g.add_node(31,  weight=-10,    player="Manufacturer",  name="Loss from delay")
    g.add_node(4,   weight=-5,    player="Manufacturer",  name="Cancel order") 
    g.add_node(5,   weight=0,    player="Manufacturer",  name="Receive inferior product") 
    g.add_node(6,   weight=0,    player="Manufacturer",  name="Receive product") 
    g.add_node(7,   weight=-50,    player="Manufacturer",  name="Payment") 
    g.add_node(8,   weight=-10,    player="Manufacturer",  name="Produce products") 
    g.add_node(9,   weight=80,    player="Manufacturer",  name="Sell products") 
    g.add_node(10,  weight=0,    player="Manufacturer",  name="Accept inferior products") 
    g.add_node(11,  weight=5,    player="Manufacturer",  name="Reject product") 
    g.add_node(111, weight=-20,    player="Manufacturer",  name="Loss from cancelled production") 
    g.add_node(12,  weight=-40,    player="Manufacturer",  name="Payment") 
    g.add_node(13,  weight=-10,    player="Manufacturer",  name="Produce inferior products") 
    g.add_node(14,  weight=70,    player="Manufacturer",  name="Sell inferior products") 

    g.add_node(15,  weight=0,    player="Supplier",      name="Accept order")
    g.add_node(16,  weight=0,    player="Supplier",      name="Notify lateness")
    g.add_node(17,  weight=0,    player="Supplier",      name="Notify")
    g.add_node(18,  weight=-5,    player="Supplier",      name="Receive acceptance")
    g.add_node(19,  weight=-10,    player="Supplier",      name="Receive cancellation")
    g.add_node(20,  weight=-10,    player="Supplier",      name="Increase capacity")
    g.add_node(21,  weight=0,    player="Supplier",      name="Hasten production")
    g.add_node(22,  weight=0,    player="Supplier",      name="Deliver product")
    g.add_node(23,  weight=0,    player="Supplier",      name="Deliver inferior product")
    g.add_node(24,  weight=50,    player="Supplier",      name="Receive payment")
    g.add_node(25,  weight=-30,    player="Supplier",      name="Receive rejection")
    g.add_node(26,  weight=40,    player="Supplier",      name="Receive payment")

    g.add_edge(-1, 0)
    g.add_edge(0, 1)
    g.add_edge(0, 2)
    g.add_edge(1, 3)
    g.add_edge(1, 4)
    g.add_edge(4, -2)
    g.add_edge(3, 31)
    g.add_edge(31, 6)
    g.add_edge(6, 7)
    g.add_edge(7, 8)
    g.add_edge(8, 9)
    g.add_edge(9, -2)
    g.add_edge(2, 6)
    g.add_edge(2, 5)
    g.add_edge(5, 11)
    g.add_edge(11, 111)
    g.add_edge(111, -2)
    g.add_edge(5, 10)
    g.add_edge(10, 12)
    g.add_edge(12, 13)
    g.add_edge(13, 14)
    g.add_edge(14, -2)

    g.add_edge(-1, 15)
    g.add_edge(15, 16)
    g.add_edge(16, 19)
    g.add_edge(19, -2)
    g.add_edge(16, 18)
    g.add_edge(18, 22)
    g.add_edge(22, 24) 
    g.add_edge(24, -2)
    g.add_edge(15, 17)
    g.add_edge(17, 20)
    g.add_edge(20, 22)
    g.add_edge(17, 21)
    g.add_edge(21, 23)
    g.add_edge(23, 25)
    g.add_edge(23, 26)
    g.add_edge(25, -2)
    g.add_edge(26, -2)

    g.add_edge(0, 15)
    g.add_edge(16, 1)
    g.add_edge(17, 2)
    g.add_edge(3, 18)
    g.add_edge(4, 19)
    g.add_edge(22, 6)
    g.add_edge(23, 5)
    g.add_edge(7, 24)
    g.add_edge(11, 25)
    g.add_edge(12, 26)

    return g